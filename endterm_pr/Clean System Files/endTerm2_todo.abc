.comp 920 000111010010000
.start __endTerm2_todo_Start
.depend "_SystemEnumStrict" "20211222162233"
.depend "_SystemStrictLists" "20211222162233"
.depend "StdStrictLists" "20211222162231"
.depend "_SystemEnum" "20211222162228"
.depend "StdEnum" "20211222162231"
.depend "StdMisc" "20211222162231"
.depend "StdFunctions" "20211222162231"
.depend "StdCharList" "20211222162235"
.depend "StdTuple" "20211222162233"
.depend "StdOrdList" "20211222162235"
.depend "StdList" "20231102135021"
.depend "StdClass" "20211222162233"
.depend "StdFile" "20211222162231"
.depend "StdString" "20211222162235"
.depend "_SystemArray" "20211222162231"
.depend "StdArray" "20211222162233"
.depend "StdChar" "20211222162228"
.depend "StdReal" "20211222162231"
.depend "StdInt" "20211222162231"
.depend "StdOverloaded" "20211222162231"
.depend "StdBool" "20211222162231"
.depend "StdEnv" "20211222162231"
.module m_endTerm2_todo "endTerm2_todo" "20231208134340"
.endinfo
.impmod _system
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc e_system_dind
.implab e_system_nind e_system_eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc ARRAY
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.impmod StdList
.implab e_StdList_shd
.implab e_StdList_stl
.impmod StdString
.implab e_StdString_s+++;11
.impmod _SystemArray
.impmod StdChar
.impdesc e_StdChar_dtoUpper
.implab e_StdChar_ntoUpper
.impdesc e_StdChar_dtoLower
.implab e_StdChar_ntoLower
.impmod StdInt
.implab e_StdInt_s+;6
.implab e_StdInt_s-;7
.implab e_StdInt_sone;11
.implab e_StdInt_s<;17
.impmod StdBool
.implab e_StdBool_snot
.desc0 d17 0 "Finance"
.desc0 d18 1 "CS"
.desc0 d19 2 "Math"
.desc0 d20 3 "Physics"
.desc0 d21 4 "Economy"
.desc0 d22 5 "Linguistics"
.desc d28 _hnf _add_arg 3 0 "Node"
.desc d29 _hnf _hnf 0 0 "Leaf"
.desc0 d34 0 "Red"
.desc0 d35 1 "Yellow"
.desc0 d36 2 "Green"
.desc0 d37 3 "Blue"
.desc0 d38 4 "Purple"
.desc0 d39 5 "Orange"
.desc0 d40 6 "Violet"
.desc0 d41 7 "Amber"
.desc0 d42 8 "Teal"
.desc0 d43 9 "Vermilion"
.desc0 d44 10 "Magenta"
.desc0 d45 11 "Chartreuse"
.export __endTerm2_todo_Start
.o 0 0
__endTerm2_todo_Start
	build _ 0 n2
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n2
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea2
.o 1 0
	fillh ARRAY 1 1
.d 1 0
	rtn
.o 0 0
ea2
.o 0 0
s2
	buildAC ""
.d 1 0
	jmp s1
.o 1 0
s1
	push_a 0
	eqAC_a ""
	jmp_true case.1
	jmp case.2
case.1
	pop_a 1
	buildAC ""
.d 1 0
	rtn
case.2
	push_a 0
	updatepop_a 0 1
	push_a 0
	push_arraysize CHAR 0 1
	pushI 1
	push_b 1
	subI
	create
	push_a 1
	buildh ARRAY 1
	pushI 0
	update_b 1 2
	updatepop_b 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 2 ii
	jsr s6
.o 1 0
	create
	push_a 1
.d 2 0
	jsr e_StdList_stl
.o 1 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr s5
.o 1 0
	create
	push_a 2
.d 2 0
	jsr e_StdList_stl
.o 1 0
	create
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 2 0
	jsr s4
.o 1 0
	pushI 0
.d 1 1 i
	jsr s8
.o 0 1 i
	create_array_ CHAR 0 1
	buildI 0
	push_a 1
	update_a 1 2
	update_a 0 1
	pop_a 1
.d 3 0
	jsr s7
.o 1 0
	create
	push_a 2
	buildh _Nil 0
	update_a 0 4
	pop_a 1
.d 2 0
	jsr s3
.o 1 0
.d 1 0
	jsr e_StdList_shd
.o 1 0
	pushC_a 0
	pop_a 1
	pushI 1
	create_array_ CHAR 0 1
	pushI 0
	update CHAR 0 1
	update_a 1 2
	updatepop_a 0 1
.d 2 0
	jsr catAC
.o 1 0
.d 1 0
	rtn
.n 1 _ ea3
.o 1 0
n3
	push_node _cycle_in_spine 1
.o 2 0
ea3
	jsr_eval 0
.o 2 0
s3
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp s13
.o 2 0
s13
	eq_desc _Cons 2 0
	jmp_true case.3
	jmp case.4
case.3
	repl_args 2 2
	push_a 1
	build _ 1 n3
	push_a 1
	build _ 1 e_StdChar_ntoUpper
	fillh _Cons 2 4
	pop_a 2
.d 1 0
	rtn
case.4
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.n 1 _ ea4
.o 1 0
n4
	push_node _cycle_in_spine 1
.o 2 0
ea4
	jsr_eval 0
.o 2 0
s4
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp s12
.o 2 0
s12
	eq_desc _Cons 2 0
	jmp_true case.5
	jmp case.6
case.5
	repl_args 2 2
	push_a 1
	build _ 1 n4
	push_a 1
	build _ 1 e_StdChar_ntoLower
	fillh _Cons 2 4
	pop_a 2
.d 1 0
	rtn
case.6
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.o 1 1 i
s8
	push_b 0
	push_a 0
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s11
.o 1 1 i
s11
	eq_desc _Cons 2 0
	jmp_true case.7
	jmp case.8
case.7
	repl_args 2 2
	pop_a 1
	push_a 0
	jsr_eval 0
	pushI 1
	push_b 1
	addI
	updatepop_a 0 1
	updatepop_b 0 1
.d 1 1 i
	jmp s8
case.8
	pop_a 1
.d 0 1 i
	rtn
.n 1 _ ea5
.o 1 0
n5
	push_node _cycle_in_spine 1
.o 2 0
ea5
	jsr_eval 0
.o 2 0
s5
	push_a 0
	updatepop_a 0 1
.d 2 0
	jmp s10
.o 2 0
s10
	eq_desc _Cons 2 0
	jmp_true case.9
	jmp case.10
case.9
	repl_args 2 2
	push_a 1
	build _ 1 n5
	push_a 1
	build _ 1 e_StdChar_ntoLower
	fillh _Cons 2 4
	pop_a 2
.d 1 0
	rtn
case.10
	fillh _Nil 0 1
	pop_a 1
.d 1 0
	rtn
.o 3 0
s7
	push_a 1
	push_a 1
	push_a 4
	update_a 2 5
	update_a 1 4
	updatepop_a 0 3
.d 3 0
	jmp s9
.o 3 0
s9
	eq_desc _Cons 2 0
	jmp_true case.11
	jmp case.12
case.11
	repl_args 2 2
	push_a 1
	jsr_eval 0
	push_a 4
	build _ 1 n50
	push_a 2
	jsr_eval 0
	pushC_a 3
	pop_a 1
	push_a 5
	jsr_eval 0
	pushI_a 6
	pop_a 1
	push_a 4
	buildh _Nil 0
	update_a 0 6
	update_a 0 7
	update_a 0 4
	update_a 0 5
	pop_a 1
	update CHAR 0 1
	update_a 2 6
	update_a 1 5
	updatepop_a 0 4
.d 3 0
	jmp s7
case.12
	updatepop_a 1 2
.d 1 0
	rtn
.n 1 _ ea50
.o 1 0
n50
	push_node _cycle_in_spine 1
.o 2 0
ea50
.o 2 0
s50
	pushI 1
	push_a 0
	jsr_eval 0
	pushI_a 1
	pop_a 1
	pop_a 1
	addI
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 2 2 ii
s6
	push_b 0
	push_b 2
	ltI
	notB
	jmp_false else.13
	push_b 0
	push_array 0
	updatepop_a 0 1
	push_a 0
	select CHAR 0 1
	push_a 0
	buildh ARRAY 1
	push_a 0
	push_b 2
	push_b 2
	build_u _ 1 2 n51
	buildC_b 0
	fillh _Cons 2 4
	pop_a 2
	pop_b 3
.d 1 0
	rtn
else.13
	fillh _Nil 0 1
	pop_a 1
	pop_b 2
.d 1 0
	rtn
.nu 1 2 _ _
.o 1 0
n51
	push_node_u _cycle_in_spine 1 2
.o 2 2 ii
ea51
.o 2 2 ii
s51
	pushI 1
	push_b 1
	addI
	push_a 0
	push_b 2
	push_b 1
	update_b 1 2
	update_b 0 1
	pop_b 1
	updatepop_a 0 1
	update_b 1 3
	updatepop_b 0 2
.d 2 2 ii
	jmp s6
